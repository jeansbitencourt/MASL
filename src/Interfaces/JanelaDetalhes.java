/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Classes.DatabaseControl;
import Classes.Registro;
import Classes.RegistroControl;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author jean
 */
public class JanelaDetalhes extends javax.swing.JDialog {

    int id;
    String tipo;
    String path;
    DatabaseControl conf;
    private Registro reg;
    private RegistroControl cont;
    public String dropVer;

    /**
     * Creates new form JanelaDetalhes
     */
    public JanelaDetalhes() {
        configWindow();
    }

    public JanelaDetalhes(int id) {
        configWindow();
        this.id = id;
        System.out.println(id);
        JanelaDetalhes janelaAtual = this;

        cont = new RegistroControl();
        reg = cont.retornaRegistro(id);
        this.tipo = reg.getTipo();
        this.setTitle("Todos os detalhes de " + reg.getNome());
        jTextField_titulo.setText(reg.getNome());
        jTextField_generos.setText(reg.getGeneros());
        jTextField_ano.setText(String.valueOf(reg.getAno()));
        jTextField_epitotal.setText(String.valueOf(reg.getEpitotal()));
        jTextField_epiatual.setText(String.valueOf(reg.getEpiatual()));
        jTextField_nota.setText(String.valueOf(reg.getNota()));
        jTextField_temporada.setText(reg.getTemporada());
        jTextArea_descricao.setText(reg.getDescricao());
        dropVer = reg.getDrop();

        if ("Sim".equals(reg.getDrop())) {
            jButton_drop.setText("Voltar a assistir");
            jButton_drop.setToolTipText("Voltar assistir este anime ou série (o registro voltará a aparecer na janela principal)");
            jButton_drop.setBackground(Color.BLUE);
            jButton_drop.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    reg.setDrop("Não");
                    cont.update(reg);
                    JanelaDetalhes janelaNova = new JanelaDetalhes(id);
                    janelaAtual.setVisible(false);
                    janelaNova.setVisible(true);
                }
            });
        } else {
            jButton_drop.setText("Dropar");
            jButton_drop.setToolTipText("Um anime ou série dropado não aparecerá na janela principal, mas poderá ser encontrado pela busca");
            jButton_drop.setBackground(Color.RED);
            jButton_drop.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    reg.setDrop("Sim");
                    cont.update(reg);
                    JanelaDetalhes janelaNova = new JanelaDetalhes(id);
                    janelaAtual.setVisible(false);
                    janelaNova.setVisible(true);
                }
            });
        }
        loadImg();
    }

    public int getId() {
        return this.id;
    }

    public String getTipo() {
        return this.tipo;
    }

    private void loadImg() {
        conf = new DatabaseControl();
        path = conf.pathProgram();
        path = path + "/SaveFiles/capa_id_" + this.getId();
        File a = new File(path + ".jpg");
        if (a.exists() && !a.isDirectory()) {
            ImageIcon image = new ImageIcon("" + a);
            image.getImage().flush(); // Limpar cache da imagem :D
            jLabel_semimg.setText("");
            jLabel_semimg.setIcon(image);
            jLabel_semimg.setMinimumSize(new Dimension(250, 340));
            jLabel_semimg.setMaximumSize(new Dimension(250, 340));
        }
    }

    private void configWindow() {
        initComponents();
        this.setModal(true);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setModal(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField_titulo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField_generos = new javax.swing.JTextField();
        jPanel_img = new javax.swing.JPanel();
        jLabel_semimg = new javax.swing.JLabel();
        jButton_salvar = new javax.swing.JButton();
        jButton_fechar = new javax.swing.JButton();
        jButton_excluir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField_ano = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField_temporada = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField_epitotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField_epiatual = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField_nota = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_descricao = new javax.swing.JTextArea();
        jButton_img = new javax.swing.JButton();
        jButton_soma = new javax.swing.JButton();
        jButton_diminui = new javax.swing.JButton();
        jButton_drop = new javax.swing.JButton();

        jLabel1.setText("Título:");

        jTextField_titulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_tituloActionPerformed(evt);
            }
        });

        jLabel2.setText("Gêneros:");

        jPanel_img.setBackground(new java.awt.Color(0, 0, 0));
        jPanel_img.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel_semimg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_semimg.setText("Sem imagem");

        javax.swing.GroupLayout jPanel_imgLayout = new javax.swing.GroupLayout(jPanel_img);
        jPanel_img.setLayout(jPanel_imgLayout);
        jPanel_imgLayout.setHorizontalGroup(
            jPanel_imgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_semimg, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );
        jPanel_imgLayout.setVerticalGroup(
            jPanel_imgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_semimg, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
        );

        jButton_salvar.setText("Salvar");
        jButton_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_salvarActionPerformed(evt);
            }
        });

        jButton_fechar.setText("Fechar");
        jButton_fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_fecharActionPerformed(evt);
            }
        });

        jButton_excluir.setBackground(new java.awt.Color(204, 0, 0));
        jButton_excluir.setText("Excluir registro");
        jButton_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_excluirActionPerformed(evt);
            }
        });

        jLabel3.setText("Ano:");

        jTextField_ano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_anoActionPerformed(evt);
            }
        });

        jLabel4.setText("Temporada:");

        jLabel5.setText("Total de episódios:");

        jLabel6.setText("Último episódio assistido:");

        jTextField_epiatual.setEditable(false);

        jLabel7.setText("Nota:");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Descrição:");

        jTextArea_descricao.setColumns(20);
        jTextArea_descricao.setRows(5);
        jScrollPane1.setViewportView(jTextArea_descricao);
        jTextArea_descricao.setLineWrap(true);
        jTextArea_descricao.setWrapStyleWord(true);

        jButton_img.setBackground(new java.awt.Color(0, 0, 0));
        jButton_img.setText("Alterar imagem");
        jButton_img.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_imgActionPerformed(evt);
            }
        });

        jButton_soma.setText("+");
        jButton_soma.setToolTipText("Adicionar mais um episódio como visto");
        jButton_soma.setPreferredSize(new java.awt.Dimension(30, 30));
        jButton_soma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_somaActionPerformed(evt);
            }
        });

        jButton_diminui.setText("-");
        jButton_diminui.setToolTipText("Diminuir um episódio como visto");
        jButton_diminui.setPreferredSize(new java.awt.Dimension(30, 30));
        jButton_diminui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_diminuiActionPerformed(evt);
            }
        });

        jButton_drop.setBackground(new java.awt.Color(255, 0, 0));
        jButton_drop.setText("DROPAR");
        jButton_drop.setPreferredSize(new java.awt.Dimension(77, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel_img, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_img)
                            .addComponent(jButton_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_titulo))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_generos)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jButton_excluir, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                        .addGap(143, 143, 143)
                        .addComponent(jButton_fechar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_epitotal))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_ano)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_temporada, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_epiatual)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_drop, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jButton_diminui, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_soma, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_nota, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField_generos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField_ano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_temporada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField_epitotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField_epiatual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_soma, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton_diminui, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton_drop, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(3, 3, 3)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel_img, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_img)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField_nota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_salvar)
                    .addComponent(jButton_excluir)
                    .addComponent(jButton_fechar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_tituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_tituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_tituloActionPerformed

    private void jTextField_anoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_anoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_anoActionPerformed

    private void jButton_fecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_fecharActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton_fecharActionPerformed

    private void jButton_imgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_imgActionPerformed

        //Pega o arquivo no PC
        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        conf = new DatabaseControl();
        path = conf.pathProgram();

        int i = file.showSaveDialog(null);
        //Pega o arquivo no PC

        //Verifica se o arquivo foi selecionado ou se a operação foi cancelada
        //Se cancelada, seta o campo como nulo
        if (i != 1) {
            File arquivo = file.getSelectedFile();

            //Variavel que pega só o nome do arquivo
            String b;
            b = arquivo.getName();

            //Pega o caminho do arquivo até achar a extensão
            String arq = arquivo.getPath();
            String ext[] = arq.split("\\.");
            int a = ext.length;

            //Variavel que pega monta novo nome para arquivo usando id do registro
            String c;
            c = "capa_id_" + this.getId() + "." + ext[a - 1];

            System.out.println("Extensao do arquivo -> " + ext[a - 1]);
            if (a > 1) {
                if ("jpg".equals(ext[a - 1])) {
                    //arquivo.renameTo(new File(path + "/SaveFiles/" + c));  Rename To move o arquivo e nao faz copia

                    File newarquivo = new File(path + "/SaveFiles/" + c);

                    if (newarquivo.exists() && !newarquivo.isDirectory()) {
                        newarquivo.delete();
                    }

                    InputStream in = null;
                    try {
                        in = new FileInputStream(arquivo);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(JanelaDetalhes.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    OutputStream out = null;
                    try {
                        out = new FileOutputStream(newarquivo);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(JanelaDetalhes.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    byte[] buf = new byte[1024];
                    int len;
                    try {
                        while ((len = in.read(buf)) > 0) {
                            out.write(buf, 0, len);
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(JanelaDetalhes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        in.close();
                    } catch (IOException ex) {
                        Logger.getLogger(JanelaDetalhes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        out.close();
                    } catch (IOException ex) {
                        Logger.getLogger(JanelaDetalhes.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    System.out.println("Nome original do arquivo-> " + b);
                    System.out.println("Salvando em -> " + path + "/SaveFIles/" + c);
                    loadImg();
                } else {
                    JOptionPane.showMessageDialog(null, "Apenas arquivos com extenção .jpg será aceito!");
                }
            }

        }


    }//GEN-LAST:event_jButton_imgActionPerformed

    private void jButton_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_salvarActionPerformed
        reg = new Registro();
        reg.setId(this.getId());
        reg.setTipo(this.getTipo());
        reg.setNome(jTextField_titulo.getText());
        reg.setGeneros(jTextField_generos.getText());
        reg.setAno(Integer.parseInt(jTextField_ano.getText()));
        reg.setEpitotal(Integer.parseInt(jTextField_epitotal.getText()));
        reg.setEpiatual(Integer.parseInt(jTextField_epiatual.getText()));
        reg.setNota(Integer.parseInt(jTextField_nota.getText()));
        reg.setDescricao(jTextArea_descricao.getText());
        reg.setTemporada(jTextField_temporada.getText());
        reg.setDrop(dropVer);
        

        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Calendar cal = Calendar.getInstance();
        reg.setUltimaModificacao(dateFormat.format(cal.getTime()));

        cont = new RegistroControl();
        cont.update(reg);

        JOptionPane.showMessageDialog(null, "Todos os dados foram salvos com sucesso!");
        this.setVisible(false);
    }//GEN-LAST:event_jButton_salvarActionPerformed

    private void jButton_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_excluirActionPerformed
        JOptionPane pane = new JOptionPane();
        int selectedOption = pane.showOptionDialog(null,
                "Você realmente quer excluir permanentemente esse registro?",
                "Você tem certeza?",
                pane.OK_CANCEL_OPTION,
                pane.INFORMATION_MESSAGE,
                null,
                new String[]{"Sim, exlcuir", "Não, cancelar"}, // this is the array
                "default");

        if (selectedOption == JOptionPane.YES_OPTION) {
            System.out.println("Excluindo o registro");
            reg = new Registro();
            reg.setId(this.getId());
            cont = new RegistroControl();
            cont.delete(reg);
            JOptionPane.showMessageDialog(null, "Registro excluído com sucesso!");
            this.setVisible(false);
        } else {
            System.out.println("Operação recusada (excluir registro)");
        }
    }//GEN-LAST:event_jButton_excluirActionPerformed

    private void jButton_somaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_somaActionPerformed
        if (!jTextField_epiatual.getText().isEmpty()) {
            if (Integer.parseInt(jTextField_epiatual.getText()) >= Integer.parseInt(jTextField_epitotal.getText())) {
                jTextField_epiatual.setText(jTextField_epitotal.getText());
            } else {
                int valor = Integer.parseInt(jTextField_epiatual.getText()) + 1;
                jTextField_epiatual.setText(Integer.toString(valor));
            }
        } else {
            jTextField_epiatual.setText("0");
        }
    }//GEN-LAST:event_jButton_somaActionPerformed

    private void jButton_diminuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_diminuiActionPerformed
        if (!jTextField_epiatual.getText().isEmpty()) {
            int valor = Integer.parseInt(jTextField_epiatual.getText()) - 1;
            if (valor < 0) {
                jTextField_epiatual.setText("0");
            } else {
                jTextField_epiatual.setText(Integer.toString(valor));
            }
        } else {
            jTextField_epiatual.setText("0");
        }
    }//GEN-LAST:event_jButton_diminuiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaDetalhes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaDetalhes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaDetalhes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaDetalhes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaDetalhes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_diminui;
    private javax.swing.JButton jButton_drop;
    private javax.swing.JButton jButton_excluir;
    private javax.swing.JButton jButton_fechar;
    private javax.swing.JButton jButton_img;
    private javax.swing.JButton jButton_salvar;
    private javax.swing.JButton jButton_soma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_semimg;
    private javax.swing.JPanel jPanel_img;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea_descricao;
    private javax.swing.JTextField jTextField_ano;
    private javax.swing.JTextField jTextField_epiatual;
    private javax.swing.JTextField jTextField_epitotal;
    private javax.swing.JTextField jTextField_generos;
    private javax.swing.JTextField jTextField_nota;
    private javax.swing.JTextField jTextField_temporada;
    private javax.swing.JTextField jTextField_titulo;
    // End of variables declaration//GEN-END:variables
}
